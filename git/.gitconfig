
[user]
	name = Ryan Opel 
	email = ropel@newrelic.com

[alias]
    b = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
    l = log --oneline --decorate origin/master..
    co = checkout
    tree = log --graph --pretty=oneline --abbrev-commit
    oops = reset HEAD~1 --soft
    delete-squashed = "!f() { local targetBranch=${1:-master} && git checkout -q $targetBranch && git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base $targetBranch $branch) && [[ $(git cherry $targetBranch $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done; }; f"
    hash = "!f() { git rev-parse HEAD | tr -d '\\n'; }; f"
    difft = -c diff.external=difft diff

[color]
    ui = auto

[core]
    excludesfile = /Users/ropel/.gitignore
    whitespace=trailing-space,tab=in-indent	
    editor = nvim

[merge]
    onflictstyle = diff3

[push]
    default = simple

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[pull]
    rebase = true

[url "ssh://git@source.datanerd.us/"]
    insteadOf = https://source.datanerd.us/

[init]
    defaultBranch = master
